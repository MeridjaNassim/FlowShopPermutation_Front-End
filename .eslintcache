[{"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\index.js":"1","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js":"2","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"3","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\layouts\\RTL\\RTL.js":"4","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\layouts\\Admin\\Admin.js":"5","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\contexts\\ThemeContext.js":"6","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\contexts\\BackgroundColorContext.js":"7","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\routes.js":"8","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Footer\\Footer.js":"9","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Navbars\\AdminNavbar.js":"10","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Navbars\\RTLNavbar.js":"11","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Sidebar\\Sidebar.js":"12","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\FixedPlugin\\FixedPlugin.js":"13","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Map.js":"14","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\TableList.js":"15","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Notifications.js":"16","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Dashboard.js":"17","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Typography.js":"18","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Rtl.js":"19","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Icons.js":"20","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\B&B.js":"21","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\FSP.js":"22","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\CDS.js":"23","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\NEH.js":"24","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\GA.js":"25","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\SA.js":"26","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\CDF.js":"27","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\variables\\charts.js":"28","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\InstanceSelector\\InstanceSelector.js":"29","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\utils\\parse.js":"30","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\utils\\common.js":"31","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\models\\Instance.js":"32","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\instances.js":"33","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\middleware.js":"34","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\endpoint.js":"35"},{"size":1610,"mtime":1622326572280,"results":"36","hashOfConfig":"37"},{"size":516,"mtime":1622301417220,"results":"38","hashOfConfig":"37"},{"size":723,"mtime":1622301417224,"results":"39","hashOfConfig":"37"},{"size":5732,"mtime":1622301417232,"results":"40","hashOfConfig":"37"},{"size":4563,"mtime":1622326572281,"results":"41","hashOfConfig":"37"},{"size":212,"mtime":1622301417225,"results":"42","hashOfConfig":"37"},{"size":266,"mtime":1622301417224,"results":"43","hashOfConfig":"37"},{"size":2469,"mtime":1622326572287,"results":"44","hashOfConfig":"37"},{"size":1897,"mtime":1622301417221,"results":"45","hashOfConfig":"37"},{"size":3203,"mtime":1622326572279,"results":"46","hashOfConfig":"37"},{"size":7200,"mtime":1622301417223,"results":"47","hashOfConfig":"37"},{"size":5331,"mtime":1622326572279,"results":"48","hashOfConfig":"37"},{"size":4350,"mtime":1622301417221,"results":"49","hashOfConfig":"37"},{"size":7876,"mtime":1622301417253,"results":"50","hashOfConfig":"37"},{"size":5968,"mtime":1622301417255,"results":"51","hashOfConfig":"37"},{"size":8296,"mtime":1622301417253,"results":"52","hashOfConfig":"37"},{"size":21037,"mtime":1622301417246,"results":"53","hashOfConfig":"37"},{"size":8733,"mtime":1622301417256,"results":"54","hashOfConfig":"37"},{"size":22940,"mtime":1622301417254,"results":"55","hashOfConfig":"37"},{"size":43027,"mtime":1622301417252,"results":"56","hashOfConfig":"37"},{"size":5778,"mtime":1622328319799,"results":"57","hashOfConfig":"37"},{"size":2778,"mtime":1622326572291,"results":"58","hashOfConfig":"37"},{"size":2605,"mtime":1622328577176,"results":"59","hashOfConfig":"37"},{"size":5031,"mtime":1622328572428,"results":"60","hashOfConfig":"37"},{"size":4611,"mtime":1622328580593,"results":"61","hashOfConfig":"37"},{"size":5877,"mtime":1622328699414,"results":"62","hashOfConfig":"37"},{"size":8520,"mtime":1622328760788,"results":"63","hashOfConfig":"37"},{"size":11337,"mtime":1622301417243,"results":"64","hashOfConfig":"37"},{"size":4649,"mtime":1622331470472,"results":"65","hashOfConfig":"37"},{"size":2878,"mtime":1622330242066,"results":"66","hashOfConfig":"37"},{"size":279,"mtime":1622301502128,"results":"67","hashOfConfig":"37"},{"size":1148,"mtime":1622326716855,"results":"68","hashOfConfig":"37"},{"size":1349,"mtime":1622307549992,"results":"69","hashOfConfig":"37"},{"size":163,"mtime":1622301502069,"results":"70","hashOfConfig":"37"},{"size":202,"mtime":1622326716852,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"g2jqoj",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"75"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\index.js",["155"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL/RTL.js\";\r\n\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\r\n          <Redirect from=\"/\" to=\"/admin/FSP\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["156","157"],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\ThemeWrapper\\ThemeWrapper.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\layouts\\RTL\\RTL.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\layouts\\Admin\\Admin.js",["158","159"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/react-logo.png\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Admin(props) {\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper\">\r\n            <Sidebar\r\n              routes={routes}\r\n              \r\n              logoText={\"Methodes\"}\r\n              toggleSidebar={toggleSidebar}\r\n            />\r\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                <Redirect from=\"*\" to=\"/admin/dashboard\" />\r\n              </Switch>\r\n             \r\n            </div>\r\n          </div>\r\n          <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\contexts\\ThemeContext.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\contexts\\BackgroundColorContext.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\routes.js",["160","161","162","163","164","165","166"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport Icons from \"views/Icons.js\";\r\nimport Map from \"views/Map.js\";\r\nimport Notifications from \"views/Notifications.js\";\r\nimport Rtl from \"views/Rtl.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Typography from \"views/Typography.js\";\r\nimport Branch_and_Bound from \"views/B&B.js\";\r\nimport NEH from \"views/NEH\";\r\nimport CDS from \"views/CDS\";\r\nimport SA from \"views/SA\";\r\nimport GA from \"views/GA\";\r\nimport FSP from \"views/FSP\";\r\nimport CDF from \"views/CDF\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/FSP\",\r\n    name: \"FSP\",\r\n    component: FSP,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Branch_and_Bound\",\r\n    name: \"Branch and Bound\",\r\n    component: Branch_and_Bound,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/NEH\",\r\n    name: \"Heuristique NEH\",\r\n    component: NEH,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/CDS\",\r\n    name: \"CDS\",\r\n    component: CDS,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/GA\",\r\n    name: \"Algorithmes génetiques\",\r\n    component: GA,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/SA\",\r\n    name: \"Récuit Simulé\",\r\n    component: SA,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/CDF\",\r\n    name: \"Colonnie de fourmis\",\r\n    rtlName: \"قائمة الجدول\",\r\n    component: CDF,\r\n    layout: \"/admin\",\r\n  },\r\n  // {\r\n  //   path: \"/CDF\",\r\n  //   name: \"Colonnie de fourmis\",\r\n  //   rtlName: \"قائمة الجدول\",\r\n  //   component: TableList,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   rtlName: \"طباعة\",\r\n  //   component: Typography,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/rtl-support\",\r\n  //   name: \"RTL Support\",\r\n  //   rtlName: \"ار تي ال\",\r\n  //   component: Rtl,\r\n  //   layout: \"/rtl\",\r\n  // },\r\n];\r\nexport default routes;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Footer\\Footer.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Navbars\\AdminNavbar.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  NavbarToggler,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nfunction AdminNavbar(props) {\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            \r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n         \r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Navbars\\RTLNavbar.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\FixedPlugin\\FixedPlugin.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Map.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\TableList.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Notifications.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Dashboard.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Typography.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Rtl.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\Icons.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\B&B.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\n\r\nimport \"../assets/css/FSP.css\"\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Label,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport InstanceSelector from \"components/InstanceSelector/InstanceSelector\";\r\n\r\nfunction Branch_and_Bound(props) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [strategy, setStrategy] = useState(-1);\r\n  const [initValue, setInitValue] = useState(false);\r\n  const [parallel, setParallel] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const [DFS, setDFS] = useState(false);\r\n  //const[DFS,setDFS]=useState(False);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Branch and Bound</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      Le branch-and-bound est un paradigme de conception\r\n                      d'algorithmes pour les problèmes d'optimisation discrète\r\n                      et combinatoire, ainsi que pour l'optimisation\r\n                      mathématique. Un algorithme de branchement et de\r\n                      limitation consiste en une énumération systématique des\r\n                      solutions candidates au moyen d'une recherche dans\r\n                      l'espace d'état : l'ensemble des solutions candidates est\r\n                      considéré comme formant un arbre à racines avec l'ensemble\r\n                      complet à la racine. L'algorithme explore les branches de\r\n                      cet arbre, qui représentent des sous-ensembles de\r\n                      l'ensemble des solutions. Avant d'énumérer les solutions\r\n                      candidates d'une branche, la branche est vérifiée par\r\n                      rapport aux limites supérieures et inférieures estimées de\r\n                      la solution optimale, et est rejetée si elle ne peut pas\r\n                      produire une meilleure solution que la meilleure solution\r\n                      trouvée jusqu'à présent par l'algorithme.\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n               <InstanceSelector></InstanceSelector>\r\n                {/* <h2 className=\"title\">Upload instance</h2>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Input id=\"file-upload\" type=\"file\" style={{display : \"none\"}}></Input>\r\n                  <Button className=\"btn-fill\" color=\"secondary\">\r\n                    Upload instance\r\n                </Button>\r\n                  </Col>\r\n                </Row> */}\r\n                <br/>\r\n                <h5 className=\"pr-md-1\" className=\"title\">\r\n                    Search Strategy\r\n                  </h5>\r\n                <Row>\r\n                \r\n                <Col className=\"pr-md-1\" md=\"12\">\r\n                  <ButtonGroup>\r\n                    <Button\r\n                    className=\"radioCheck\"\r\n                    color= {strategy===1? \"success\" : \"primary\"}\r\n                    onClick={() => setStrategy(1)}\r\n                      //active={rSelected === 1}\r\n                    >\r\n                      Depth First Search\r\n                    </Button>\r\n                \r\n                    <Button\r\n                      className=\"radioCheck\"\r\n                      color= {strategy===0? \"success\" : \"primary\"}\r\n                      onClick={() => setStrategy(0)}\r\n                      // active={rSelected === 2}\r\n                    >\r\n                      Best First Search\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                        color= {initValue? \"success\" : \"primary\"}\r\n                        onClick={() => setInitValue(!initValue)}\r\n                  // active={rSelected === 1}\r\n                >\r\n                  Initialisation avec heuristique\r\n                </Button>\r\n                \r\n                \r\n              </Form>\r\n              <Row>\r\n              <Col className=\"pr-md-1\" md=\"12\">\r\n              <Button\r\n                        color= {parallel? \"success\" : \"primary\"}\r\n                        onClick={() => setParallel(!parallel)}\r\n                  // active={rSelected === 1}\r\n                >\r\n                  Run in Parallel\r\n                </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Branch_and_Bound;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\FSP.js",["194","195","196","197","198","199"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\n\r\nfunction FSP(props) {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Flow Shop Permutation Problem</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      Le branch-and-bound est un paradigme de conception\r\n                      d'algorithmes pour les problèmes d'optimisation discrète\r\n                      et combinatoire, ainsi que pour l'optimisation\r\n                      mathématique. Un algorithme de branchement et de\r\n                      limitation consiste en une énumération systématique des\r\n                      solutions candidates au moyen d'une recherche dans\r\n                      l'espace d'état : l'ensemble des solutions candidates est\r\n                      considéré comme formant un arbre à racines avec l'ensemble\r\n                      complet à la racine. L'algorithme explore les branches de\r\n                      cet arbre, qui représentent des sous-ensembles de\r\n                      l'ensemble des solutions. Avant d'énumérer les solutions\r\n                      candidates d'une branche, la branche est vérifiée par\r\n                      rapport aux limites supérieures et inférieures estimées de\r\n                      la solution optimale, et est rejetée si elle ne peut pas\r\n                      produire une meilleure solution que la meilleure solution\r\n                      trouvée jusqu'à présent par l'algorithme.\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FSP;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\CDS.js",["200","201","202","203","204","205","206","207","208","209"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport InstanceSelector from \"../components/InstanceSelector/InstanceSelector\"\r\nfunction CDS(props) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Heuristique CDS</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                    Cette méthode a été proposée par Campbell, Dudek et Smith en 1970. Elle s’appuie sur l’algorithme optimal de Johnson qui résout les problèmes de flowshop à deux machines avec une complexité polynomiale. L’idée consiste - pour une instance de n job et m machine – à créer (m-1) instances fictives de n jobs et de deux machines, puis résoudre ces instances en utilisant Johnson. Ensuite, prendre l’ordonnancement avec le minimum makespan (l’instant ou se termine le dernier job dans la dernière machine).  \r\n\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <InstanceSelector></InstanceSelector>\r\n                \r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CDS;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\NEH.js",["210","211","212","213","214","215","216","217","218","219"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\nimport \"../assets/css/FSP.css\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Label\r\n} from \"reactstrap\";\r\nimport InstanceSelector from \"../components/InstanceSelector/InstanceSelector\"\r\nfunction NEH(props) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [ordre, setOrder] = useState(\"\");\r\n  const [breaking, setBreaking] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Heuristique NEH</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      L'heuristique NEH est l'une des heuristiques les plus\r\n                      connues pour l'ordonnancement des flux. Cette heuristique\r\n                      n'est pas seulement efficace, elle est également simple à\r\n                      calculer, et donc largement utilisée. Un grand nombre\r\n                      d'études ont utilisé cette heuristique comme référence\r\n                      pour comparer leurs résultats. Elle a été développée en\r\n                      1983 par Nawaz, Enscore et Ham. Elle est basée sur l'idée\r\n                      que les jobs avec un temps de traitement élevé sur toutes\r\n                      les machines doivent être programmées le plus tôt possible\r\n                      dans la séquence.\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <InstanceSelector></InstanceSelector>\r\n                <br />\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5>Ordre de la séquence initiale:</h5>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                         size=\"sm\"\r\n                        color= {ordre===\"dec\"? \"success\" : \"primary\"}\r\n                        onClick={() => setOrder(\"dec\")}\r\n                        // active={rSelected === 1}\r\n                      >\r\n                        Décroissant\r\n                      </Button>\r\n                      <Button \r\n                      size=\"sm\"\r\n                       \r\n                      color= {ordre===\"croi\"? \"success\" : \"primary\"}\r\n                      onClick={() => setOrder(\"croi\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        Croissant\r\n                      </Button>\r\n                      <Button\r\n                         size=\"sm\"\r\n                         color= {ordre===\"ale\"? \"success\" : \"primary\"}\r\n                         onClick={() => setOrder(\"ale\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        Aléatoire\r\n                      </Button>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        color= {ordre===\"moyEcart\"? \"success\" : \"primary\"}\r\n                        onClick={() => setOrder(\"moyEcart\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        Moyenne et écart type\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n               \r\n                  <Button\r\n                        color= {breaking? \"success\" : \"primary\"}\r\n                        onClick={() => setBreaking(!breaking)}\r\n                    // active={rSelected === 1}\r\n                  >\r\n                    Tie Breaking Mechanism\r\n                  </Button>\r\n          \r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\" onClick ={()=> console.log(ordre)}>\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NEH;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\GA.js",["220","221","222","223","224","225","226","227","228","229","230"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport InstanceSelector from \"../components/InstanceSelector/InstanceSelector\"\r\nfunction GA(props) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [taillePoulation, setTaillePopulation] = useState(\"\");\r\n  const [nbGen, setNbGen] = useState(\"\");\r\n  const [pc, setPc] = useState(\"\");\r\n  const [pm, setPm] = useState(\"\");\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Algorithmes Génétiques</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      En informatique et en recherche opérationnelle, un\r\n                      algorithme génétique (AG) est une métaheuristique inspirée\r\n                      par le processus de sélection naturelle qui appartient à\r\n                      la grande classe des algorithmes évolutionnaires (EA). Les\r\n                      algorithmes génétiques travaillent de manière itérative\r\n                      sur une population de solutions candidates au problème\r\n                      donné. Ce sont des algorithmes de recherche probabiliste,\r\n                      qui imitent l'évolution biologique pour produire des\r\n                      solutions de progéniture qui s'améliorent progressivement\r\n                      (Ying-Hua et Young Chang). Chaque solution à un problème\r\n                      donné peut être encodée par un chromosome qui représente\r\n                      un individu dans une population. Chaque chromosome est\r\n                      composé d'une séquence de gènes d'un certain alphabet.\r\n                      L'alphabet peut être un ensemble de nombres binaires, de\r\n                      nombres réels, entiers, de symboles ou de matrices.\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n               <InstanceSelector></InstanceSelector>\r\n\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <label>Taille de la population</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Taille de la population\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setTaillePopulation(e.target.value)}\r\n                      />\r\n                      <label>Nombre de génerations</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Nombre de génerations\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setNbGen(e.target.value)}\r\n                      />\r\n                      <label>Pc</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Pc\" type=\"text\" onChange={(e)=> setPc(e.target.value)}/>\r\n                      <label>Pm</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Pm\" type=\"text\" onChange={(e)=> setPm(e.target.value)}/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\" onClick ={()=> console.log(pm)}>\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GA;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\SA.js",["231","232","233","234","235","236","237","238","239","240","241"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport InstanceSelector from \"components/InstanceSelector/InstanceSelector\";\r\nimport React, { useState } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nfunction SA(props) {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [Ti, setTi] = useState(\"\");\r\n  const [Tf, setTf] = useState(\"\");\r\n  const [alpha, setAlpha] = useState(\"\");\r\n  const [nbIteration, setNbIteration] = useState(\"\");\r\n  const [valInit, setValInit] = useState(\"\");\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Récuit Simulé</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      Le recuit simulé est une méthode d’optimisation proposée\r\n                      pour la résolution d’un problème de placement en VLSI\r\n                      (Very Large Scale Integration). Son nom est inspiré du\r\n                      principe de la thermodynamique, celui du comportement des\r\n                      métaux lorsqu'ils chauffent et refroidissent. Il s'agit de\r\n                      chauffer le métal à une température extrêmement élevée,\r\n                      puis de le refroidir progressivement jusqu'à ce qu'il\r\n                      atteigne son état d'énergie minimale, qui est la\r\n                      configuration la plus régulière possible pour le métal. Si\r\n                      le métal est refroidi trop rapidement, il se retrouvera\r\n                      sous une forme inutile puisque le processus de chauffage\r\n                      déplacera les atomes de façon aléatoire, modifiant la\r\n                      structure interne. Cette analogie peut être utilisée pour\r\n                      la planification des tâches, les états du solide étant des\r\n                      solutions réalisables et la forme finale du solide, la\r\n                      solution optimale. Le concept a été introduit pour la\r\n                      première fois par Metropolis et al [NM en 1953] et ensuite\r\n                      étudié plus en détail par Kirkpatrick et al [SK en 1983]\r\n                      et Fetterolf et Anandalingam [PCF en 1991] pour les\r\n                      modèles d'optimisation discrets [AS en 1996].\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <InstanceSelector></InstanceSelector>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <label>Température initiale</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Température initiale\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setTi(e.target.value)}\r\n                      />\r\n                      <label>Température finale</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Température finale\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setTf(e.target.value)}\r\n                      />\r\n                      <label>Alpha</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Alpha\" type=\"text\" onChange={(e)=> setAlpha(e.target.value)}/>\r\n                      <label>Nombre d'itérations</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Nombre d'itérations\" type=\"text\" onChange={(e)=> setNbIteration(e.target.value)}/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <h5>Valeur initiale</h5>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        color= {valInit===\"neh\"? \"success\" : \"primary\"}\r\n                        onClick={() => setValInit(\"neh\")}\r\n                        // active={rSelected === 1}\r\n                      >\r\n                        NEH\r\n                      </Button>\r\n                      <Button\r\n                        color= {valInit===\"cds\"? \"success\" : \"primary\"}\r\n                        onClick={() => setValInit(\"cds\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        CDS\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SA;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\views\\CDF.js",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport InstanceSelector from \"components/InstanceSelector/InstanceSelector\";\r\nimport React, { useState } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nfunction CDF(props) {\r\n  const [initValue, setInitValue] = useState(\"\");\r\n  const [nbFourmis, setNbFourmis] = useState(\"\");\r\n  const [rho, setRHO] = useState(\"\");\r\n  const [alpha, setAlpha] = useState(\"\");\r\n  const [beta, setBeta] = useState(\"\");\r\n  const [qo, setQo] = useState(\"\");\r\n  const [infoStrategy, setInfoStrategy] = useState(\"\");\r\n  const [nbRonds, setNbRonds] = useState(\"\");\r\n  const [nbThreads, setNbThreads] = useState(\"\");\r\n  const [localSearch, setLocalSearch] = useState(false);\r\n  const [localSearchProb, setLocalSearchProb] = useState(\"\");\r\n  const [nbPremutLocalSearch, setnbPremutLocalSearch] = useState(\"\");\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  //const[DFS,setDFS]=useState(False);\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Col md=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h2 className=\"title\">Colonnies de Fourmis</h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <h5 className=\"title\">Description</h5>\r\n                    <p>\r\n                      Le branch-and-bound est un paradigme de conception\r\n                      d'algorithmes pour les problèmes d'optimisation discrète\r\n                      et combinatoire, ainsi que pour l'optimisation\r\n                      mathématique. Un algorithme de branchement et de\r\n                      limitation consiste en une énumération systématique des\r\n                      solutions candidates au moyen d'une recherche dans\r\n                      l'espace d'état : l'ensemble des solutions candidates est\r\n                      considéré comme formant un arbre à racines avec l'ensemble\r\n                      complet à la racine. L'algorithme explore les branches de\r\n                      cet arbre, qui représentent des sous-ensembles de\r\n                      l'ensemble des solutions. Avant d'énumérer les solutions\r\n                      candidates d'une branche, la branche est vérifiée par\r\n                      rapport aux limites supérieures et inférieures estimées de\r\n                      la solution optimale, et est rejetée si elle ne peut pas\r\n                      produire une meilleure solution que la meilleure solution\r\n                      trouvée jusqu'à présent par l'algorithme.\r\n                    </p>\r\n                    <br />\r\n                  </Col>\r\n                </Row>\r\n\r\n               <InstanceSelector></InstanceSelector>\r\n                <br />\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <label>Valeur initiale</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Valeur initiale\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setInitValue(e.target.value)}\r\n                      />\r\n                      <label>Nombre de fourmis</label>\r\n                      <Input\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Nombre de fourmis\"\r\n                        type=\"text\"\r\n                        onChange={(e)=> setNbFourmis(e.target.value)}\r\n                      />\r\n                      <label>RHO</label>\r\n                      <Input defaultValue=\"\" placeholder=\"RHO\" type=\"text\" onChange={(e)=> setRHO(e.target.value)}/>\r\n                      <label>Alpha</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Alpha\" type=\"text\" onChange={(e)=> setAlpha(e.target.value)} />\r\n                      <label>Beta</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Beta\" type=\"text\" onChange={(e)=> setBeta(e.target.value)}/>\r\n                      <label>Q0</label>\r\n                      <Input defaultValue=\"\" placeholder=\"Q0\" type=\"text\" onChange={(e)=> setQo(e.target.value)}/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <h5>Heuristique Info Strategy</h5>\r\n                <Row>\r\n                  <Col className=\"pr-md-1\" md=\"12\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        color= {infoStrategy===\"min\"? \"success\" : \"primary\"}\r\n                        onClick={() => setInfoStrategy(\"min\")}\r\n                        // active={rSelected === 1}\r\n                      >\r\n                        Min\r\n                      </Button>\r\n                      <Button\r\n                        color= {infoStrategy===\"avg\"? \"success\" : \"primary\"}\r\n                        onClick={() => setInfoStrategy(\"avg\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        Average\r\n                      </Button>\r\n                      <Button\r\n                        color= {infoStrategy===\"max\"? \"success\" : \"primary\"}\r\n                        onClick={() => setInfoStrategy(\"max\")}\r\n                        // active={rSelected === 2}\r\n                      >\r\n                        Max\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <FormGroup>\r\n                  <label>Nombre de ronds</label>\r\n                  <Input\r\n                    defaultValue=\"\"\r\n                    placeholder=\"Nombre de ronds\"\r\n                    type=\"text\"\r\n                    onChange={(e)=> setNbRonds(e.target.value)}\r\n                  />\r\n                  <label>Nombre de threads</label>\r\n                  <Input\r\n                    defaultValue=\"\"\r\n                    placeholder=\"Nombre de threads\"\r\n                    type=\"text\"\r\n                    onChange={(e)=> setNbThreads(e.target.value)}\r\n                  />\r\n                  <Button\r\n                        color= {localSearch? \"success\" : \"primary\"}\r\n                        onClick={() => setLocalSearch(!localSearch)}\r\n                    // active={rSelected === 2}\r\n                  >\r\n                    Local Search\r\n                  </Button>\r\n                  <br />\r\n                  <br />\r\n                  {\r\n                    localSearch ? \r\n                  <div>\r\n                  <label>Local Search Probabilité</label>\r\n                  <Input\r\n                    defaultValue=\"\"\r\n                    placeholder=\"Local Search Probabilité\"\r\n                    type=\"text\"\r\n                    onChange={(e)=> setLocalSearch(e.target.value)}\r\n                  />\r\n\r\n                  <label>\r\n                    Nombre de permutations pour local search (si choisi){\" \"}\r\n                  </label>\r\n                  <Input\r\n                    defaultValue=\"\"\r\n                    placeholder=\"Nombre de permutations pour local search\"\r\n                    type=\"text\"\r\n                    onChange={(e)=> setnbPremutLocalSearch(e.target.value)}\r\n                  />\r\n                  </div>\r\n                  : \r\n                  <div></div>\r\n                }\r\n                </FormGroup>\r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                Calculer\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CDF;\r\n","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\variables\\charts.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\components\\InstanceSelector\\InstanceSelector.js",["260","261","262","263","264","265"],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\utils\\parse.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\utils\\common.js",["266"],"/**\r\n * Creates a string instance ID with the following format : {jobs}x{machines}-{timestamp}\r\n * @param {number} jobs \r\n * @param {number} machines \r\n */\r\nexport function generateInstanceIdFromTimeStamps(jobs,machines){\r\n    return jobs+\"x\"+machines+\"-\"+(new Date).getTime()\r\n}","D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\models\\Instance.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\instances.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\middleware.js",[],"D:\\study\\2SIQ3\\OPTIM\\React-OPT\\src\\api\\endpoint.js",[],{"ruleId":"267","severity":1,"message":"268","line":23,"column":8,"nodeType":"269","messageId":"270","endLine":23,"endColumn":17},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"267","severity":1,"message":"275","line":25,"column":8,"nodeType":"269","messageId":"270","endLine":25,"endColumn":14},{"ruleId":"267","severity":1,"message":"276","line":31,"column":8,"nodeType":"269","messageId":"270","endLine":31,"endColumn":12},{"ruleId":"267","severity":1,"message":"277","line":18,"column":8,"nodeType":"269","messageId":"270","endLine":18,"endColumn":17},{"ruleId":"267","severity":1,"message":"278","line":19,"column":8,"nodeType":"269","messageId":"270","endLine":19,"endColumn":13},{"ruleId":"267","severity":1,"message":"279","line":20,"column":8,"nodeType":"269","messageId":"270","endLine":20,"endColumn":11},{"ruleId":"267","severity":1,"message":"280","line":21,"column":8,"nodeType":"269","messageId":"270","endLine":21,"endColumn":21},{"ruleId":"267","severity":1,"message":"281","line":22,"column":8,"nodeType":"269","messageId":"270","endLine":22,"endColumn":11},{"ruleId":"267","severity":1,"message":"282","line":23,"column":8,"nodeType":"269","messageId":"270","endLine":23,"endColumn":17},{"ruleId":"267","severity":1,"message":"283","line":24,"column":8,"nodeType":"269","messageId":"270","endLine":24,"endColumn":18},{"ruleId":"267","severity":1,"message":"284","line":24,"column":3,"nodeType":"269","messageId":"270","endLine":24,"endColumn":9},{"ruleId":"267","severity":1,"message":"285","line":25,"column":3,"nodeType":"269","messageId":"270","endLine":25,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":26,"column":3,"nodeType":"269","messageId":"270","endLine":26,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":27,"column":3,"nodeType":"269","messageId":"270","endLine":27,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":15},{"ruleId":"267","severity":1,"message":"289","line":29,"column":3,"nodeType":"269","messageId":"270","endLine":29,"endColumn":23},{"ruleId":"267","severity":1,"message":"290","line":30,"column":3,"nodeType":"269","messageId":"270","endLine":30,"endColumn":8},{"ruleId":"267","severity":1,"message":"291","line":31,"column":3,"nodeType":"269","messageId":"270","endLine":31,"endColumn":13},{"ruleId":"267","severity":1,"message":"292","line":32,"column":3,"nodeType":"269","messageId":"270","endLine":32,"endColumn":14},{"ruleId":"267","severity":1,"message":"293","line":34,"column":3,"nodeType":"269","messageId":"270","endLine":34,"endColumn":10},{"ruleId":"267","severity":1,"message":"294","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":6},{"ruleId":"267","severity":1,"message":"295","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":8},{"ruleId":"267","severity":1,"message":"296","line":39,"column":3,"nodeType":"269","messageId":"270","endLine":39,"endColumn":14},{"ruleId":"267","severity":1,"message":"297","line":71,"column":9,"nodeType":"269","messageId":"270","endLine":71,"endColumn":26},{"ruleId":"267","severity":1,"message":"298","line":25,"column":3,"nodeType":"269","messageId":"270","endLine":25,"endColumn":8},{"ruleId":"267","severity":1,"message":"299","line":30,"column":3,"nodeType":"269","messageId":"270","endLine":30,"endColumn":11},{"ruleId":"267","severity":1,"message":"300","line":31,"column":3,"nodeType":"269","messageId":"270","endLine":31,"endColumn":12},{"ruleId":"267","severity":1,"message":"290","line":33,"column":3,"nodeType":"269","messageId":"270","endLine":33,"endColumn":8},{"ruleId":"267","severity":1,"message":"301","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":38,"column":3,"nodeType":"269","messageId":"270","endLine":38,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":39,"column":3,"nodeType":"269","messageId":"270","endLine":39,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":40,"column":3,"nodeType":"269","messageId":"270","endLine":40,"endColumn":15},{"ruleId":"267","severity":1,"message":"302","line":45,"column":10,"nodeType":"269","messageId":"270","endLine":45,"endColumn":22},{"ruleId":"267","severity":1,"message":"303","line":49,"column":9,"nodeType":"269","messageId":"270","endLine":49,"endColumn":15},{"ruleId":"267","severity":1,"message":"304","line":50,"column":10,"nodeType":"269","messageId":"270","endLine":50,"endColumn":13},{"ruleId":"267","severity":1,"message":"305","line":50,"column":15,"nodeType":"269","messageId":"270","endLine":50,"endColumn":21},{"ruleId":"306","severity":1,"message":"307","line":96,"column":41,"nodeType":"308","messageId":"309","endLine":96,"endColumn":58},{"ruleId":"267","severity":1,"message":"284","line":22,"column":3,"nodeType":"269","messageId":"270","endLine":22,"endColumn":9},{"ruleId":"267","severity":1,"message":"310","line":26,"column":3,"nodeType":"269","messageId":"270","endLine":26,"endColumn":13},{"ruleId":"267","severity":1,"message":"299","line":27,"column":3,"nodeType":"269","messageId":"270","endLine":27,"endColumn":11},{"ruleId":"267","severity":1,"message":"300","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":12},{"ruleId":"267","severity":1,"message":"290","line":30,"column":3,"nodeType":"269","messageId":"270","endLine":30,"endColumn":8},{"ruleId":"267","severity":1,"message":"311","line":33,"column":3,"nodeType":"269","messageId":"270","endLine":33,"endColumn":14},{"ruleId":"267","severity":1,"message":"299","line":27,"column":3,"nodeType":"269","messageId":"270","endLine":27,"endColumn":11},{"ruleId":"267","severity":1,"message":"300","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":12},{"ruleId":"267","severity":1,"message":"290","line":30,"column":3,"nodeType":"269","messageId":"270","endLine":30,"endColumn":8},{"ruleId":"267","severity":1,"message":"311","line":33,"column":3,"nodeType":"269","messageId":"270","endLine":33,"endColumn":14},{"ruleId":"267","severity":1,"message":"301","line":34,"column":3,"nodeType":"269","messageId":"270","endLine":34,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":36,"column":3,"nodeType":"269","messageId":"270","endLine":36,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":15},{"ruleId":"267","severity":1,"message":"302","line":41,"column":12,"nodeType":"269","messageId":"270","endLine":41,"endColumn":24},{"ruleId":"267","severity":1,"message":"303","line":43,"column":11,"nodeType":"269","messageId":"270","endLine":43,"endColumn":17},{"ruleId":"267","severity":1,"message":"299","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":11},{"ruleId":"267","severity":1,"message":"300","line":29,"column":3,"nodeType":"269","messageId":"270","endLine":29,"endColumn":12},{"ruleId":"267","severity":1,"message":"290","line":31,"column":3,"nodeType":"269","messageId":"270","endLine":31,"endColumn":8},{"ruleId":"267","severity":1,"message":"301","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":36,"column":3,"nodeType":"269","messageId":"270","endLine":36,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":38,"column":3,"nodeType":"269","messageId":"270","endLine":38,"endColumn":15},{"ruleId":"267","severity":1,"message":"298","line":39,"column":3,"nodeType":"269","messageId":"270","endLine":39,"endColumn":8},{"ruleId":"267","severity":1,"message":"302","line":43,"column":10,"nodeType":"269","messageId":"270","endLine":43,"endColumn":22},{"ruleId":"267","severity":1,"message":"303","line":46,"column":9,"nodeType":"269","messageId":"270","endLine":46,"endColumn":15},{"ruleId":"267","severity":1,"message":"299","line":27,"column":3,"nodeType":"269","messageId":"270","endLine":27,"endColumn":11},{"ruleId":"267","severity":1,"message":"311","line":33,"column":3,"nodeType":"269","messageId":"270","endLine":33,"endColumn":14},{"ruleId":"267","severity":1,"message":"301","line":34,"column":3,"nodeType":"269","messageId":"270","endLine":34,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":36,"column":3,"nodeType":"269","messageId":"270","endLine":36,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":15},{"ruleId":"267","severity":1,"message":"302","line":41,"column":10,"nodeType":"269","messageId":"270","endLine":41,"endColumn":22},{"ruleId":"267","severity":1,"message":"312","line":42,"column":10,"nodeType":"269","messageId":"270","endLine":42,"endColumn":25},{"ruleId":"267","severity":1,"message":"313","line":43,"column":10,"nodeType":"269","messageId":"270","endLine":43,"endColumn":15},{"ruleId":"267","severity":1,"message":"314","line":44,"column":10,"nodeType":"269","messageId":"270","endLine":44,"endColumn":12},{"ruleId":"267","severity":1,"message":"303","line":47,"column":9,"nodeType":"269","messageId":"270","endLine":47,"endColumn":15},{"ruleId":"267","severity":1,"message":"299","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":11},{"ruleId":"267","severity":1,"message":"301","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":36,"column":3,"nodeType":"269","messageId":"270","endLine":36,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":38,"column":3,"nodeType":"269","messageId":"270","endLine":38,"endColumn":15},{"ruleId":"267","severity":1,"message":"302","line":42,"column":10,"nodeType":"269","messageId":"270","endLine":42,"endColumn":22},{"ruleId":"267","severity":1,"message":"315","line":43,"column":10,"nodeType":"269","messageId":"270","endLine":43,"endColumn":12},{"ruleId":"267","severity":1,"message":"316","line":44,"column":10,"nodeType":"269","messageId":"270","endLine":44,"endColumn":12},{"ruleId":"267","severity":1,"message":"317","line":45,"column":10,"nodeType":"269","messageId":"270","endLine":45,"endColumn":15},{"ruleId":"267","severity":1,"message":"318","line":46,"column":10,"nodeType":"269","messageId":"270","endLine":46,"endColumn":21},{"ruleId":"267","severity":1,"message":"303","line":49,"column":9,"nodeType":"269","messageId":"270","endLine":49,"endColumn":15},{"ruleId":"267","severity":1,"message":"299","line":28,"column":3,"nodeType":"269","messageId":"270","endLine":28,"endColumn":11},{"ruleId":"267","severity":1,"message":"301","line":35,"column":3,"nodeType":"269","messageId":"270","endLine":35,"endColumn":11},{"ruleId":"267","severity":1,"message":"286","line":36,"column":3,"nodeType":"269","messageId":"270","endLine":36,"endColumn":17},{"ruleId":"267","severity":1,"message":"287","line":37,"column":3,"nodeType":"269","messageId":"270","endLine":37,"endColumn":15},{"ruleId":"267","severity":1,"message":"288","line":38,"column":3,"nodeType":"269","messageId":"270","endLine":38,"endColumn":15},{"ruleId":"267","severity":1,"message":"319","line":42,"column":10,"nodeType":"269","messageId":"270","endLine":42,"endColumn":19},{"ruleId":"267","severity":1,"message":"320","line":43,"column":10,"nodeType":"269","messageId":"270","endLine":43,"endColumn":19},{"ruleId":"267","severity":1,"message":"321","line":44,"column":10,"nodeType":"269","messageId":"270","endLine":44,"endColumn":13},{"ruleId":"267","severity":1,"message":"317","line":45,"column":10,"nodeType":"269","messageId":"270","endLine":45,"endColumn":15},{"ruleId":"267","severity":1,"message":"322","line":46,"column":10,"nodeType":"269","messageId":"270","endLine":46,"endColumn":14},{"ruleId":"267","severity":1,"message":"323","line":47,"column":10,"nodeType":"269","messageId":"270","endLine":47,"endColumn":12},{"ruleId":"267","severity":1,"message":"324","line":49,"column":10,"nodeType":"269","messageId":"270","endLine":49,"endColumn":17},{"ruleId":"267","severity":1,"message":"325","line":50,"column":10,"nodeType":"269","messageId":"270","endLine":50,"endColumn":19},{"ruleId":"267","severity":1,"message":"326","line":52,"column":10,"nodeType":"269","messageId":"270","endLine":52,"endColumn":25},{"ruleId":"267","severity":1,"message":"327","line":52,"column":27,"nodeType":"269","messageId":"270","endLine":52,"endColumn":45},{"ruleId":"267","severity":1,"message":"328","line":53,"column":10,"nodeType":"269","messageId":"270","endLine":53,"endColumn":29},{"ruleId":"267","severity":1,"message":"302","line":55,"column":10,"nodeType":"269","messageId":"270","endLine":55,"endColumn":22},{"ruleId":"267","severity":1,"message":"303","line":56,"column":9,"nodeType":"269","messageId":"270","endLine":56,"endColumn":15},{"ruleId":"267","severity":1,"message":"329","line":7,"column":3,"nodeType":"269","messageId":"270","endLine":7,"endColumn":13},{"ruleId":"267","severity":1,"message":"310","line":9,"column":3,"nodeType":"269","messageId":"270","endLine":9,"endColumn":13},{"ruleId":"267","severity":1,"message":"330","line":13,"column":3,"nodeType":"269","messageId":"270","endLine":13,"endColumn":7},{"ruleId":"267","severity":1,"message":"311","line":17,"column":3,"nodeType":"269","messageId":"270","endLine":17,"endColumn":14},{"ruleId":"267","severity":1,"message":"331","line":23,"column":10,"nodeType":"269","messageId":"270","endLine":23,"endColumn":24},{"ruleId":"267","severity":1,"message":"332","line":23,"column":26,"nodeType":"269","messageId":"270","endLine":23,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":7,"column":35,"nodeType":"335","messageId":"336","endLine":7,"endColumn":43,"fix":"337"},"no-unused-vars","'RTLLayout' is defined but never used.","Identifier","unusedVar","no-native-reassign",["338"],"no-negated-in-lhs",["339"],"'Footer' is defined but never used.","'logo' is defined but never used.","'Dashboard' is defined but never used.","'Icons' is defined but never used.","'Map' is defined but never used.","'Notifications' is defined but never used.","'Rtl' is defined but never used.","'TableList' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Collapse' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'NavbarBrand' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'toggleModalSearch' is assigned a value but never used.","'Label' is defined but never used.","'CardText' is defined but never used.","'FormGroup' is defined but never used.","'Dropdown' is defined but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'DFS' is assigned a value but never used.","'setDFS' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'CardFooter' is defined but never used.","'ButtonGroup' is defined but never used.","'taillePoulation' is assigned a value but never used.","'nbGen' is assigned a value but never used.","'pc' is assigned a value but never used.","'Ti' is assigned a value but never used.","'Tf' is assigned a value but never used.","'alpha' is assigned a value but never used.","'nbIteration' is assigned a value but never used.","'initValue' is assigned a value but never used.","'nbFourmis' is assigned a value but never used.","'rho' is assigned a value but never used.","'beta' is assigned a value but never used.","'qo' is assigned a value but never used.","'nbRonds' is assigned a value but never used.","'nbThreads' is assigned a value but never used.","'localSearchProb' is assigned a value but never used.","'setLocalSearchProb' is assigned a value but never used.","'nbPremutLocalSearch' is assigned a value but never used.","'CardHeader' is defined but never used.","'Form' is defined but never used.","'isTemplateSpan' is defined but never used.","'isTypeNode' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"340","text":"341"},"no-global-assign","no-unsafe-negation",[265,265],"()"]